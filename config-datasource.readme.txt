启动本服务最重要的步骤，即为服务指定数据源（DataSource）。这需要分两个步骤：

首先，与通常的java项目一样，要配置数据源。数据源本身是独立的配置项。
在配置中心（比如spring-cloud-config-server或项目自身的yml文件），以map格式定制数据源。以yml文件为例，格式大致如下：
data-source-configs:
  datasource1:
    type: com.zaxxer.hikari.HikariDataSource
    data-config:
      jdbc-url: jdbc:mysql://192.168.7.104:3306/db1?useSSL=false&characterEncoding=utf8
      username: root
      password: 111111
      driver-class-name: com.mysql.jdbc.Driver
      hikari:
        pool-name: HikariCP
        auto-commit: false
        connection-timeout: 5000
        max-lifetime: 600000
        maximum-pool-size: 50
        minimum-idle: 5
   datasource2:
     type: com.zaxxer.hikari.HikariDataSource
     data-config:
       jdbc-url: jdbc:mysql://192.168.7.104:3306/db2?useSSL=false&characterEncoding=utf8
       username: root
       password: 111111
       driver-class-name: com.mysql.jdbc.Driver
       hikari:
         pool-name: HikariCP
         auto-commit: false
         connection-timeout: 5000
         max-lifetime: 600000
         maximum-pool-size: 50
         minimum-idle: 5
    ...
        (type和data-config这两个tag可以修改，参见dragonli-java-tools项目中的readme)

其次，撷取若干个数据源形成一个集合，以某种格式向项目提供配置，即可完成数据源的配置。这有两种方式：
1 以一个包含分隔符的字符串的方式，即以一个字符串提供配置。具体方法mvn编译时加入参数，如一点点所示：
mvn \
-DDATA_SOURCE_CONFIG="data-source-configs.datasource1;data-source-configs.datasource2" \
-DDATA_SOURCE_CONFIG_SEPARATOR=";" \
clean install
(-DDATA_SOURCE_CONFIG_SEPARATOR=";"是指明分隔符)

2 另有一种看上去更优雅的方式。即以列表的方式设置数据源。此途径需要先在配置中心同时还配置列表节点：
        datasourceList1:
          - data-source-configs.datasource1
          - data-source-configs.datasource2
        mvn编译时设置参数 -DDATA_SOURCE_CONFIG_LIST_PATH即可。例：
mvn \
-DDATA_SOURCE_CONFIG_LIST_PATH="datasourceList1"
clean install